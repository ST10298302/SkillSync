-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.achievements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  description text,
  icon text,
  category USER-DEFINED NOT NULL,
  requirements jsonb,
  rarity text DEFAULT 'common'::text,
  points integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT achievements_pkey PRIMARY KEY (id)
);
CREATE TABLE public.assignments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tutor_id uuid,
  student_id uuid,
  skill_id uuid,
  title text NOT NULL,
  description text,
  due_date timestamp with time zone,
  is_completed boolean DEFAULT false,
  completed_at timestamp with time zone,
  feedback text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT assignments_pkey PRIMARY KEY (id),
  CONSTRAINT assignments_tutor_id_fkey FOREIGN KEY (tutor_id) REFERENCES auth.users(id),
  CONSTRAINT assignments_student_id_fkey FOREIGN KEY (student_id) REFERENCES auth.users(id),
  CONSTRAINT assignments_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id)
);
CREATE TABLE public.comment_reactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  comment_id uuid,
  user_id uuid,
  reaction_type USER-DEFINED NOT NULL DEFAULT 'like'::reaction_type,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT comment_reactions_pkey PRIMARY KEY (id),
  CONSTRAINT comment_reactions_comment_id_fkey FOREIGN KEY (comment_id) REFERENCES public.skill_comments(id),
  CONSTRAINT comment_reactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.learning_path_skills (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  path_id uuid,
  skill_id uuid,
  order_index integer NOT NULL,
  is_required boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT learning_path_skills_pkey PRIMARY KEY (id),
  CONSTRAINT learning_path_skills_path_id_fkey FOREIGN KEY (path_id) REFERENCES public.learning_paths(id),
  CONSTRAINT learning_path_skills_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id)
);
CREATE TABLE public.learning_paths (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title text NOT NULL,
  description text,
  created_by uuid,
  is_public boolean DEFAULT false,
  skill_count integer DEFAULT 0,
  estimated_hours numeric,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT learning_paths_pkey PRIMARY KEY (id),
  CONSTRAINT learning_paths_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  type USER-DEFINED NOT NULL,
  title text NOT NULL,
  message text,
  related_skill_id uuid,
  related_user_id uuid,
  is_read boolean DEFAULT false,
  read_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT notifications_related_skill_id_fkey FOREIGN KEY (related_skill_id) REFERENCES public.skills(id),
  CONSTRAINT notifications_related_user_id_fkey FOREIGN KEY (related_user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.progress_updates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_id uuid NOT NULL,
  progress integer NOT NULL CHECK (progress >= 0 AND progress <= 100),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT progress_updates_pkey PRIMARY KEY (id),
  CONSTRAINT progress_updates_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id)
);
CREATE TABLE public.skill_artifacts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_id uuid,
  title text NOT NULL,
  description text,
  file_type text NOT NULL,
  file_url text NOT NULL,
  thumbnail_url text,
  file_size integer,
  uploaded_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_artifacts_pkey PRIMARY KEY (id),
  CONSTRAINT skill_artifacts_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id),
  CONSTRAINT skill_artifacts_uploaded_by_fkey FOREIGN KEY (uploaded_by) REFERENCES auth.users(id)
);
CREATE TABLE public.skill_categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  description text,
  parent_id uuid,
  icon text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_categories_pkey PRIMARY KEY (id),
  CONSTRAINT skill_categories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.skill_categories(id)
);
CREATE TABLE public.skill_challenges (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_id uuid,
  challenge_title text NOT NULL,
  challenge_description text,
  solution text,
  is_resolved boolean DEFAULT false,
  resolved_at timestamp with time zone,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_challenges_pkey PRIMARY KEY (id),
  CONSTRAINT skill_challenges_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id),
  CONSTRAINT skill_challenges_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.skill_comments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_id uuid,
  user_id uuid,
  parent_comment_id uuid,
  content text NOT NULL,
  mentions ARRAY,
  edited boolean DEFAULT false,
  edited_at timestamp with time zone,
  likes_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_comments_pkey PRIMARY KEY (id),
  CONSTRAINT skill_comments_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id),
  CONSTRAINT skill_comments_parent_comment_id_fkey FOREIGN KEY (parent_comment_id) REFERENCES public.skill_comments(id),
  CONSTRAINT skill_comments_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.skill_dependencies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_id uuid,
  prerequisite_skill_id uuid,
  is_required boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_dependencies_pkey PRIMARY KEY (id),
  CONSTRAINT skill_dependencies_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id),
  CONSTRAINT skill_dependencies_prerequisite_skill_id_fkey FOREIGN KEY (prerequisite_skill_id) REFERENCES public.skills(id)
);
CREATE TABLE public.skill_entries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_id uuid NOT NULL,
  content text NOT NULL,
  hours numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_entries_pkey PRIMARY KEY (id),
  CONSTRAINT skill_entries_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id)
);
CREATE TABLE public.skill_levels (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_id uuid,
  level_type USER-DEFINED NOT NULL,
  name text NOT NULL,
  description text,
  min_progress integer DEFAULT 0,
  max_progress integer DEFAULT 100,
  required_hours numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_levels_pkey PRIMARY KEY (id),
  CONSTRAINT skill_levels_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id)
);
CREATE TABLE public.skill_milestones (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_id uuid,
  title text NOT NULL,
  description text,
  order_index integer NOT NULL,
  is_completed boolean DEFAULT false,
  completed_at timestamp with time zone,
  completed_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_milestones_pkey PRIMARY KEY (id),
  CONSTRAINT skill_milestones_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id),
  CONSTRAINT skill_milestones_completed_by_fkey FOREIGN KEY (completed_by) REFERENCES auth.users(id)
);
CREATE TABLE public.skill_reactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_id uuid,
  user_id uuid,
  reaction_type USER-DEFINED NOT NULL DEFAULT 'like'::reaction_type,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_reactions_pkey PRIMARY KEY (id),
  CONSTRAINT skill_reactions_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id),
  CONSTRAINT skill_reactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.skill_resources (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_id uuid,
  title text NOT NULL,
  description text,
  resource_type text NOT NULL,
  url text,
  file_url text,
  added_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_resources_pkey PRIMARY KEY (id),
  CONSTRAINT skill_resources_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id),
  CONSTRAINT skill_resources_added_by_fkey FOREIGN KEY (added_by) REFERENCES auth.users(id)
);
CREATE TABLE public.skill_students (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_id uuid NOT NULL,
  student_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_students_pkey PRIMARY KEY (id),
  CONSTRAINT skill_students_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id),
  CONSTRAINT skill_students_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.users(id)
);
CREATE TABLE public.skill_techniques (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_id uuid,
  technique_name text NOT NULL,
  description text,
  practice_hours numeric DEFAULT 0,
  mastery_level integer DEFAULT 0 CHECK (mastery_level >= 0 AND mastery_level <= 100),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_techniques_pkey PRIMARY KEY (id),
  CONSTRAINT skill_techniques_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id)
);
CREATE TABLE public.skills (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  description text,
  progress integer DEFAULT 0 CHECK (progress >= 0 AND progress <= 100),
  user_id uuid NOT NULL,
  total_hours numeric DEFAULT 0,
  streak integer DEFAULT 0,
  last_updated timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  category_id uuid,
  level_id uuid,
  visibility USER-DEFINED DEFAULT 'public'::skill_visibility,
  is_certified boolean DEFAULT false,
  estimated_hours numeric,
  likes_count integer DEFAULT 0,
  comments_count integer DEFAULT 0,
  current_level USER-DEFINED DEFAULT 'beginner'::skill_level_type,
  completed_levels ARRAY DEFAULT '{}'::skill_level_type[],
  tutor_id uuid,
  CONSTRAINT skills_pkey PRIMARY KEY (id),
  CONSTRAINT skills_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT skills_tutor_id_fkey FOREIGN KEY (tutor_id) REFERENCES public.users(id)
);
CREATE TABLE public.tutor_students (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tutor_id uuid,
  student_id uuid,
  enrolled_at timestamp with time zone DEFAULT now(),
  status text DEFAULT 'active'::text,
  notes text,
  CONSTRAINT tutor_students_pkey PRIMARY KEY (id),
  CONSTRAINT tutor_students_student_id_fkey FOREIGN KEY (student_id) REFERENCES auth.users(id),
  CONSTRAINT tutor_students_tutor_id_fkey FOREIGN KEY (tutor_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_achievements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  achievement_id uuid,
  progress integer DEFAULT 0,
  is_unlocked boolean DEFAULT false,
  unlocked_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_achievements_pkey PRIMARY KEY (id),
  CONSTRAINT user_achievements_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_achievements_achievement_id_fkey FOREIGN KEY (achievement_id) REFERENCES public.achievements(id)
);
CREATE TABLE public.user_follows (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  follower_id uuid,
  following_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_follows_pkey PRIMARY KEY (id),
  CONSTRAINT user_follows_follower_id_fkey FOREIGN KEY (follower_id) REFERENCES auth.users(id),
  CONSTRAINT user_follows_following_id_fkey FOREIGN KEY (following_id) REFERENCES auth.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL,
  email text NOT NULL UNIQUE,
  name text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  profile_picture_url text,
  profile_visibility text DEFAULT 'public'::text CHECK (profile_visibility = ANY (ARRAY['public'::text, 'private'::text, 'friends'::text])),
  show_progress boolean DEFAULT true,
  show_streaks boolean DEFAULT true,
  allow_analytics boolean DEFAULT true,
  biometric_auth boolean DEFAULT false,
  require_pin boolean DEFAULT false,
  auto_lock boolean DEFAULT true,
  session_timeout text DEFAULT '30min'::text CHECK (session_timeout = ANY (ARRAY['1min'::text, '5min'::text, '15min'::text, '30min'::text, '1hour'::text, 'never'::text])),
  daily_reminders boolean DEFAULT true,
  weekly_reports boolean DEFAULT true,
  skill_completions boolean DEFAULT true,
  streak_alerts boolean DEFAULT true,
  tips_and_tricks boolean DEFAULT false,
  marketing_emails boolean DEFAULT false,
  role USER-DEFINED DEFAULT 'learner'::user_role,
  bio text,
  tutor_specializations ARRAY,
  is_verified boolean DEFAULT false,
  premium_tier text DEFAULT 'free'::text,
  followers_count integer DEFAULT 0,
  following_count integer DEFAULT 0,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);